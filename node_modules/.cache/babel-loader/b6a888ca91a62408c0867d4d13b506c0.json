{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tt/Desktop/React-calendar/src/components/calendar/RenderTable.js\";\n\nimport React from \"react\";\nimport moment from 'moment';\nimport { getCurrentDay, getDaysInMonth, getFirstDayOfMonth } from \"../../utils\";\n\nvar RenderTable = function RenderTable(_ref) {\n  var dateObject = _ref.dateObject,\n      onDayClick = _ref.onDayClick,\n      onPrevNext = _ref.onPrevNext;\n  var blanks = [];\n  var startBlank = moment(dateObject).subtract(1, 'months').endOf('month').format('D'); // let lastMonth = moment(dateObject).subtract(1,'month').startOf(\"month\").format('MMMM');\n  // let nextMonth = moment(dateObject).add(1,'month').startOf(\"month\").format('MMMM');\n\n  for (var i = 0; i < getFirstDayOfMonth(dateObject); i++) {\n    console.log('getFirstDayOfMonth(dateObject)');\n    blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n      onClick: function onClick() {\n        return onPrevNext(false);\n      },\n      key: i,\n      className: \"calendar-day empty\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, startBlank - i));\n  }\n\n  var daysInMonth = [];\n\n  var _loop = function _loop(d) {\n    var currentDay = d == getCurrentDay(dateObject) ? 'today' : '';\n    daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: d,\n      className: \"calendar-day \".concat(currentDay),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick(e) {\n        onDayClick(e, d);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, d)));\n  };\n\n  for (var d = 1; d <= getDaysInMonth(dateObject); d++) {\n    _loop(d);\n  }\n\n  var totalSlots = [].concat(blanks, daysInMonth);\n  var rows = [];\n  var cells = [];\n  totalSlots.forEach(function (day, i) {\n    if (i % 7 !== 0 && cells.length < 7) {\n      cells.push(day); //will push first 6 elements\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(day);\n    }\n\n    if (i === totalSlots.length - 1) {\n      if (cells.length === 7) {\n        rows.push(cells);\n      } else {\n        var iteration = 7 - cells.length;\n\n        for (var _i = 0; _i < iteration; _i++) {\n          cells.push( /*#__PURE__*/React.createElement(\"td\", {\n            onClick: function onClick() {\n              return onPrevNext(true);\n            },\n            key: _i + 'td',\n            className: \"calendar-day empty\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 22\n            }\n          }, _i + 1));\n        }\n\n        rows.push(cells);\n      }\n    }\n  });\n  var list = rows.map(function (row, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i + 'tr',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, row);\n  });\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, list);\n};\n\nexport default RenderTable;","map":{"version":3,"sources":["/home/tt/Desktop/React-calendar/src/components/calendar/RenderTable.js"],"names":["React","moment","getCurrentDay","getDaysInMonth","getFirstDayOfMonth","RenderTable","dateObject","onDayClick","onPrevNext","blanks","startBlank","subtract","endOf","format","i","console","log","push","daysInMonth","d","currentDay","e","totalSlots","rows","cells","forEach","day","length","iteration","list","map","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from 'moment';\n\nimport { getCurrentDay, getDaysInMonth, getFirstDayOfMonth } from \"../../utils\";\n\nconst RenderTable = ({ dateObject, onDayClick, onPrevNext }) => {\n  let blanks = [];\n\n  let startBlank = moment(dateObject).subtract(1,'months').endOf('month').format('D');\n  // let lastMonth = moment(dateObject).subtract(1,'month').startOf(\"month\").format('MMMM');\n  // let nextMonth = moment(dateObject).add(1,'month').startOf(\"month\").format('MMMM');\n  for (let i = 0; i < getFirstDayOfMonth(dateObject); i++) {\n    console.log('getFirstDayOfMonth(dateObject)', );\n    blanks.push(<td onClick={() => onPrevNext(false)} key={i} className=\"calendar-day empty\">{startBlank-i}</td>);\n  }\n\n  let daysInMonth = [];\n  for (let d = 1; d <= getDaysInMonth(dateObject); d++) {\n    let currentDay = d == getCurrentDay(dateObject) ? 'today' : '';\n    daysInMonth.push(\n      <td key={d} className={`calendar-day ${currentDay}`}>\n          <span\n            onClick={e => {\n              onDayClick(e, d);\n            }}\n          >\n            {d}\n          </span>\n      </td>\n    );\n  }\n  var totalSlots = [...blanks, ...daysInMonth];\n  let rows = [];\n  let cells = [];\n  totalSlots.forEach((day, i) => {\n    if (i % 7 !== 0 && cells.length < 7) {\n      cells.push(day);\n      //will push first 6 elements\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(day);\n    }\n\n    if (i === totalSlots.length - 1) {\n      if(cells.length === 7){\n        rows.push(cells);\n      }else {\n        const iteration = 7 - cells.length;\n        for (let i = 0; i < iteration; i++) {\n          cells.push(<td onClick={() => onPrevNext(true)} key={i+'td'} className=\"calendar-day empty\">{i+1}</td>);\n        }\n        rows.push(cells);\n      }\n    }\n  });\n\n  const list =  rows.map((row, i) => {\n    return <tr key={i+'tr'}>{row}</tr>;\n  });\n\n  return ( <tbody>{list}</tbody>);\n};\n\nexport default RenderTable;\n\n"]},"metadata":{},"sourceType":"module"}